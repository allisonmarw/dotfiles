#!/usr/bin/env zsh
export ZSH_ALIASES_LOADED

if (( $+command[nvim] )); then
    export MANPAGER="nvim -c 'set ft=man' -"
    alias vim=nvim
    alias vi=nvim
elif (( $+command[vim] )); then
    alias vi=vim
fi

if (( $+command[vimr] )); then
    echo 'vimr not installed' >&2
    return 1
elif [[ ${DISTRO} == "darwin" ]]; then
    alias vimr='vimr --cur-env --nvim'
    alias vim='vimr'
fi

if (( $+command[thefuck] )); then
    eval $(thefuck --alias)
fi

function ls () {
    emulate -L zsh
    if [[ $TERM =~ ^xterm ]]; then
        if (( $+functions[k] )) ; then
            alias ls='k'
        elif (( $+command[lsd] )) ; then
            alias ls='lsd --group-dirs=first'
        elif (( $+command[ls] )) ; then
            alias ls='ls --color=always'
        fi
    fi
    unset -f ls
    (( $+aliases[ls] )) && $aliases[ls] || ls
}

function ipython_bootstrap () {
    python -c 'import IPython; IPython.embed(colors="Linux")'
}
function ipython3_bootstrap () {
    python3 -c 'import IPython; IPython.embed(colors="Linux")'
}

alias system_fillscreen='/usr/bin/yes "$(printf '\''-\n\n\n'\'')" | /usr/bin/head -n $(( $(tput lines) * 31 / 16 ))'
alias ipy="python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'"
alias ipy3="python3 -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'"

alias shutup='stty tostop'
#########################
#       Aliases         #
#########################
# Access zsh config files
alias zshconf="(){ setopt extendedglob local_options; nvim ${HOME}/.zshrc ${0:h}/config-files.plugin.zsh ${0:h}/themes/\${MYPROMPT}-*~*.zwc }"

alias follow='tail -f'
alias g='git'
# Linkux only
alias ..='cd .. 2>/dev/null || cd "$(dirname $PWD)"' # Allows leaving from deleted directories

function _darwin_aliases () {
    # Show/hide hidden files in Finder
    alias system_show_hidden="defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder"
    alias system_hide="defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder"
    # Hide/show all desktop icons (useful when presenting)
    alias xsystem_hide_desktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
    alias system_show_desktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"
    # Flush Directory Service cache
    alias flushdns="dscacheutil -flushcache && killall -HUP mDNSResponder"
    alias system_mute="osascript -e 'set volume output muted true'"
    alias system_lock="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"
    alias flushdns='sudo dscacheutil -flushcache && sudo killall -HUP mDNSResponder'

    alias vmware-dhcp-restart='sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --configure && \
    sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --stop && \
    sudo /Applications/VMware\ Fusion.app/Contents/Library/vmnet-cli --start'
}

alias ztimes='zinit times'
alias zstatus='zinit zstatus'
alias zreportall='zinit zreport --all'
alias zreport='zinit zreport'

if (( $+command[jq] )); then
    alias lines-to-json='jq --slurp --raw-input '\''split("\n")[:-1]'\'
    alias tslines-to-json='jq --slurp --raw-input '\''split("\n")[:-1] | map({
	date: (. | strptime("%a, %d %b %Y %H:%M:%S") | todate[0:10]),
	time: (. | strptime("%a, %d %b %Y %H:%M:%S") | todate[11:19]) })'\'
fi
