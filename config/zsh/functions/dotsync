emulate -L zsh
local CACHES=( "${ZSH_CACHE_DIR:A}" ~/.cache/dein )
#local SYNCOPTIONS='--verbose --archive --delete --progress -n -z'
local SYNCOPTIONS=("--archive" "-z" "--progress")
(( $+SAFE )) || SYNCOPTIONS+="--delete"
(( $+DEBUG )) && SYNCOPTIONS+="-vv"
(( $+COMMIT)) || SYNCOPTIONS+="-n"
local HOST="$1"
[[ ${HOST} ]]  || { print -- '%F{red}usage: dotsync HOST %f'; return}
local CONTROLPATH="$(mktemp '%r@%h:%p'.XXXX)"
[[ ! -s ${CONTROLPATH} ]] && rm "${CONTROLPATH}" || return 10
echo "${CONTROLPATH} ${MOUNTPOINT}" >&2
if (( $+command[sshfs] )); then
    local MOUNTPOINT=$(mktemp -d remote_home.XXXX)
    ssh -Nn -o'ControlMaster ' -o"ControlPath ${CONTROLPATH}" -oPermitLocalCommand=yes -oLocalCommand="sshfs ${HOST}: ${MOUNTPOINT} &" ${HOST} &
    trap 'kill '$!' && ssh -o"ControlMaster auto" -o"ControlPath ${CONTROLPATH}"; rmdir ${MOUNTPOINT}; rm ${CONTROLPATH}' EXIT
    ls ${CACHES[@]} ${MOUNTPOINT}
else
    ssh -Nn -o'ControlMaster auto' -o"ControlPath ${CONTROLPATH}" "${HOST}" &
    trap 'ssh -Nn -o"ControlMaster auto" -o"ControlPath '"${CONTROLPATH}"'" -O exit '"${HOST}"' || kill '"$!" EXIT
    sleep 2
    (
    (( $+DEBUG )) && setopt xtrace
    dotsexist=$(ssh -o'ControlMaster auto' -o"ControlPath ${CONTROLPATH}" "${HOST}" -- test -d "$(rel_path ${DOTFILES} ${HOME})" '&& echo true || echo false')
    if [ $dotsexist = "false" ] || (( $+FORCE_DOTSYNC )); then
        # update
        CACHES+="${DOTFILES:a}"
    fi
    declare -a _PIDS=()
    for l in ${CACHES[@]}; do
        DEST=${l:a}
        /usr/bin/rsync ${SYNCOPTIONS[@]} -e'ssh -o"ControlMaster auto" -o"ControlPath '"${CONTROLPATH}"'"' --exclude .git/ ${l:a} ${HOST}:$(rel_path ${DEST} ${HOME}) & 
        _PIDS+="$!"
    done
    wait ${_PIDS}
    )
fi


# vim: filetype=zsh
